Decide on type of board in checkMove of Piece.
Javadoc everything.
Create more pieces.
Create a primitive, textOnly representation of the game.
Create toString methods.
Create classes/interfaces for promotion.
    @deprecated
        @deprecatedIsDeprecated.
    Have getPromotable() and promote() be abstract in Piece.
    Have PromotablePiece and UnpromotablePiece define those methods, as getPromotable() is the same for all pieces that can be promoted. Alternatively, PromotablePiece is abstract, as promote() will be defined differently in each subclass. UnpromotablePiece will also be abstract, as move() and checkMove() have to be abstract in all such classes.

Decide whether to have a separate class for PromotedPawn, that's equivalent in all ways to a GoldenGeneral, a PromotedPawn class that extends GoldenGeneral, or have it change into a GoldenGeneral.

Figure out how to implement demotion upon capture. And how it will work with the above ideas. Note that this mandates the existance of a PromotedPawn class. Or a promotedFrom field in GoldenGeneral.

Finish the setPieceAt method in GameState.java. Also, add a setX and setY method to Piece.java. We need to be able to set those in order to dropTable effectively. Make them package-private.
