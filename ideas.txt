Each piece has an int affiliation value:
    1 for white.
    -1 for black.
    0 for mercenary.
Has function to determine valid moves, and to promote.
Whether valid moves will return a list of all valid moves, or if it will return for a given tile that's inputted, will be decided later.

To verify King being attacked...
    An attacking method?
    King is located in possible moves of enemy Piece (most likely path)?
        For efficient looping of enemy piece, store them in yet another array? Ug.

Store board as a List<List<Piece>>. Don't forget to define an empty piece.
Alternatively, store board as a List<Piece>, and have each piece store it's own location variables. Much more efficient, and doesn't require EmptyPieces.

Sudden Realization: Why not both? Store as List<List<Piece>>. Also have built-in variables. More work, but faster. Sacrifice space for time, so to speak.

Piece[1-9] are the board. 0 and 10 are white and black drop tables.

However, then the bottom corner is (1, 0)... Consider maybe using 0-8 are board, 9 and 10 are drop tables.

Promotable pieces implement Promotable. Or maybe create a PromotablePiece and an UnpromotablePiece class.
    Probably won't do, as we want to just call board.get.get.promote, without type mismatch errors. So everything is implemented in Piece.
        Or~, we have the methods abstract in Piece, abstract class PromotablePiece, and then have those have more abstract methods! Multiple abstract nesting!

Mercenary pieces. Don't belong to either player. Can attack neither player. Can be captured by either player and then dropped by that player. Only in special modes.

Board highlights possible moves, like Andrey's chess program.

Console codes:
pro_mode 1:
    Disables tile highlighting. All invalid moves result in an instant loss.

pre_alpha 1:
    Enables "kindergarten doodles mode".

zopper:
    Instantly promotes all pawns to lances. Similar to the zopper command in Star Wars: Galactic Command.

gundaaam:
    Puts a Shining Gundam unit in the player's drop table.
    Shining Gundam:
        Can move up to 3 tiles forward, or forward diagonally, and 2 tiles sideways.
        Promotes to G Gundam.
    G Gundam:
        Can move any number of tiles forward, sideways or diagonally. Can move up to 3 tiles back and back diagonally
        Doesn't promote.

black_knight:
    Puts a Guren Mk. II unit in the player's drop table.
    Guren Mk. II:
        Can move a knight's move forward or backward, but not 2 sideways.
        Promotes to Guren Seiten.
    Guren Seiten:
        Can move a knight's move in any direction, as well as any number of moves forward/forward diagonally.
        Doesn't promote.

spinzaku:
    Puts a Lancelot unit in the player's drop table.
    Lancelot:
        Can move up to 2 tiles orthogonally, or 1 tile diagonally. 
        Promotes to Lancelot Albion.
    Lancelot Albion:
        Can move any number of tiles in any direction.

gold_edition:
    All units are promoted instantly.

mustnt_run_away:
    Puts a Shinji unit in the player's drop table.
    Shinji:
        Can move one tile ahead, or up to two tiles backwards or backwards diagonally.
        Promotes to Eva-01.
    Eva-01:
        Can move up to 2 Knight's moves. So total targets:
..X.X.X..
.X.X.X.X.
X..XXX..X
.XXX.XXX.
X.X.E.X.X
.XXX.XXX.
X..XXX..X
.X.X.X.X.
..X.X.X..
        E is Eva's starting unit. X is possible targets.
